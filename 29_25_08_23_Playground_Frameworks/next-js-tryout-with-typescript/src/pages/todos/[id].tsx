import Head from "next/head";
import { Inter } from "next/font/google";
import styles from "~/styles/Home.module.css";
import axios from "axios";
import type {
  InferGetStaticPropsType,
  GetStaticProps,
  GetStaticPaths,
} from "next";

import Link from "next/link";

type Todo = {
  userId: number;
  id: number;
  title: string;
  completed: boolean;
};

const inter = Inter({ subsets: ["latin"] });

type Props = InferGetStaticPropsType<typeof getStaticProps>;

export default function Static({ todoData }: Props) {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <div>
          <div>
            <p>{todoData?.title || ""}</p>
            <small>from user: {todoData?.userId || ""}</small>
          </div>
          <Link href={`/todos/${todoData.id - 1}`}>Prev</Link>
          <br />
          <Link href={`/todos/${todoData.id + 1}`}>Next</Link>
        </div>
      </main>
    </>
  );
}

export const getStaticPaths: GetStaticPaths = async () => {
  const todosData = await axios.get<Todo[]>(
    "https://jsonplaceholder.typicode.com/todos"
  );

  const paths = todosData.data.map((todo) => {
    return {
      params: {
        id: `${todo.id}`,
      },
    }; // See the "paths" section below
  });

  return {
    paths: paths,
    fallback: false, // false or "blocking"
  };
};

export const getStaticProps: GetStaticProps<{
  todoData: Todo;
}> = async ({ params }) => {
  //                                 ⬇ Setzt den typen vom Rückgabe wert
  const todoData = await axios.get<Todo>(
    `https://jsonplaceholder.typicode.com/todos/${params?.id}`
  );
  return { props: { todoData: todoData.data } };
};
